#Abstraction of one hot encoding
def one_hot(train,y):
  from sklearn.preprocessing import OneHotEncoder
  from sklearn.metrics import mean_absolute_error
  from sklearn.model_selection import train_test_split
  # Get list of categorical variables
  categorical_columns = (train.dtypes == 'object')
  object_cols = list(categorical_columns[categorical_columns].index)
  X = train.drop(y,axis=1)
  # Apply one-hot encoder to each column with categorical data
  OH_encoder = OneHotEncoder(handle_unknown='ignore', sparse=False)
  OH_cols_train = pd.DataFrame(OH_encoder.fit_transform(train[object_cols].astype('str')))
  # One-hot encoding removed index; put it back
  OH_cols_train.index = X.index
  # Remove categorical columns (will replace with one-hot encoding)
  num_X_train = X.drop(object_cols, axis=1)
  # Add one-hot encoded columns to numerical features
  OH_X_train = pd.concat([num_X_train, OH_cols_train], axis=1)
  # Ensure all columns have string type
  OH_X_train.columns = OH_X_train.columns.astype(str)
  return OH_X_train
